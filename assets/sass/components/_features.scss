///
/// Vortex by Pixelarity
/// pixelarity.com | hello@pixelarity.com
/// License: pixelarity.com/license
///

/* Features */

	.features {
		width: 100%;
		margin: (_size(element-margin) * 1.25) 0;

		> section {
			display: flex;
			flex-direction: column;
			padding: 1.5rem;
			width: 33.33%;
    	text-align: center;

			> :last-child {
				margin-bottom: 0;
			}

			&:nth-child(3n - 2) {
				border-left-width: 0;
			}

			&:nth-child(-n + 3) {
				border-top-width: 0;
			}

			h3 {
				font-size: 1rem;
				margin: 0 0 (_size(element-margin) * 0.325) 0;
				margin-top: 1rem;
			}

			span {
				padding: 6px;
				border-radius: 4px;
				display: flex;
				flex-direction: column;
				align-items: center;

			}

			.cat-label {
				background-color: #25dbdb;
				color: #ffffff;
				font-weight: 900;
				text-transform: uppercase;
				font-size: 0.8rem;
			}
		}

		&.partners {
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: center;

			> section {
				display: flex;
				flex-direction: row;
				padding: 0.5rem;
				width: 15%;
				flex-wrap: wrap;
				justify-content: space-evenly;

				span {
					display: flex;
					justify-content: center;
					align-items: center;
				}
			}
		}


		@include breakpoint(medium) {

			> section {
				width: 50%;
				&:nth-child(3n - 2) {
					border-left-width: 1px;
				}

				&:nth-child(-n + 3) {
					border-top-width: 1px;
				}

				&:nth-child(2n - 1) {
					border-left-width: 0;
				}

				&:nth-child(-n + 2) {
					border-top-width: 0;
				}
			}
		}

		@include breakpoint(small) {

			> section {
				width: 100%;

				&:nth-child(2n - 1) {
					border-left-width: 1px;
				}

				&:nth-child(-n + 2) {
					border-top-width: 1px;
				}

				&:nth-child(n) {
					border-left-width: 0;
				}

				&:nth-child(-n + 1) {
					border-top-width: 0;
				}
			}
		}
	}

	@include breakpoint(small) {
		.features.partners {
			> section {
				width: 33%;
			}
		}
	}

	@mixin color-features($p: null) {
		.features {
			> section {
				border-color: _palette($p, border);
			}
		}
	}

	@include color-features;
